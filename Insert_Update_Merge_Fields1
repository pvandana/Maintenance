USE [CAW]
GO
/****** Object:  StoredProcedure [dbo].[Insert_Update_Merge_Fields]    Script Date: 4/4/2017 7:53:25 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create PROCEDURE [dbo].[Insert_Update_Merge_Fields1] 
	-- Add the parameters for the stored procedure here
	   @Merge_Field_Id Int = Null,
	   @Merge_Field_Name varchar(30) = Null,
	   @Prompt varchar(max) = Null,
       @Field_Type VARCHAR(10) = Null,
	   @Err VARCHAR(50) Output
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	If (@Merge_Field_Id = 0)
		Begin
			IF NOT EXISTS 
				(
				  SELECT Merge_Field_Id  
				   FROM dbo.Merge_Fields 
				   WHERE Merge_Field_Name = @Merge_Field_Name
				)
				Begin
					-- Inserts a new row in the Merge Fields by Merge Field ID if record not present 
					 INSERT 
					   INTO dbo.Merge_Fields(Merge_Field_Name, Prompt, Field_Type)
					   VALUES (@Merge_Field_Name, @Prompt, @Field_Type)

					   Set @Err = 'Inserted'
				End
			ELSE
				Begin
					Set @Err = 'Value exists' 
				End
		End
	Else
		Begin
			IF NOT EXISTS 
				(
				  SELECT Merge_Field_Id  
				   FROM dbo.Merge_Fields 
				   WHERE Merge_Field_Id <> @Merge_Field_Id
						And
						Merge_Field_Name = @Merge_Field_Name
				)
				Begin
					-- Updates a row in the Merge Fields by Merge Field ID if record already present 
					UPDATE dbo.Merge_Fields
						SET Merge_Field_Name = @Merge_Field_Name,
							Prompt = @Prompt,
							Field_Type = @Field_Type
						WHERE
							Merge_Field_Id = @Merge_Field_Id

					Set @Err = 'Updated' 

				End
			Else
				Begin
				    
					Set @Err = 'Value exists for another recorde. not updated' 
				End
		End

		return @Err
END
